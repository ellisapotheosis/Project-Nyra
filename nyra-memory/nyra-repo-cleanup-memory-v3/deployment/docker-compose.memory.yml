version: "3.9"
networks: { nyra_net: { driver: bridge } }
volumes: { qdrant_data: {}, neo4j_data: {}, neo4j_logs: {}, metamcp_pg: {} }
services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: nyra-qdrant
    ports: ["6333:6333"]
    volumes: [ "qdrant_data:/qdrant/storage" ]
    networks: [ nyra_net ]
  neo4j:
    image: neo4j:5-community
    container_name: nyra-neo4j
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-neo4j-password}
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_PLUGINS=["apoc"]
    ports: ["7474:7474","7687:7687"]
    volumes: [ "neo4j_data:/data", "neo4j_logs:/logs" ]
    networks: [ nyra_net ]
  graphiti-mcp:
    image: ghcr.io/getzep/graphiti-mcp:latest
    container_name: nyra-graphiti-mcp
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_NAME=${MODEL_NAME:-gpt-4o-mini}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-neo4j-password}
      - GRAPHITI_TRANSPORT=sse
      - GRAPHITI_PORT=8000
    depends_on: { neo4j: { condition: service_started } }
    ports: ["7459:8000"]
    networks: [ nyra_net ]
    restart: unless-stopped
  qdrant-mcp:
    image: ghcr.io/qdrant/mcp-server-qdrant:latest
    container_name: nyra-qdrant-mcp
    environment:
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=${QDRANT_COLLECTION:-nyra}
      - EMBEDDING_PROVIDER=fastembed
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - FASTMCP_PORT=8066
      - FASTMCP_HOST=0.0.0.0
    depends_on: { qdrant: { condition: service_started } }
    ports: ["8066:8066"]
    networks: [ nyra_net ]
    restart: unless-stopped
  openmemory:
    image: ghcr.io/mem0ai/openmemory:latest
    container_name: nyra-openmemory
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXT_PUBLIC_API_URL=http://localhost:8765
      - NEXT_PUBLIC_USER_ID=${OPENMEMORY_USER:-nyra}
      - USER=${OPENMEMORY_USER:-nyra}
    ports: ["8765:8765","3000:3000"]
    networks: [ nyra_net ]
    restart: unless-stopped
  metamcp:
    image: ghcr.io/metatool-ai/metamcp:latest
    container_name: nyra-metamcp
    env_file: [ "./metamcp/.env" ]
    volumes:
      - metamcp_pg:/var/lib/postgresql/data
      - ./metamcp/servers.json:/app/servers.json:ro
      - ./metamcp/namespaces.json:/app/namespaces.json:ro
      - ./metamcp/endpoints.json:/app/endpoints.json:ro
    ports: ["12008:12008","12005:12005"]
    networks: [ nyra_net ]
    restart: unless-stopped
